{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","console","log","image","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,8BACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOd,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,e,+BCvB3CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAKQ,EAAKG,OAAOC,iBAAiBZ,QATvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAMpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCNHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAMrB,ECRwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAAAnB,GACnBiB,EAAS,CACLf,KAAMF,EACNe,SAAS,SAGjB,CAACpB,IAEGqB,EDRwBI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKpB,OAJAM,QAAQC,IAAId,GACZa,QAAQC,IAAIP,GAIR,gCACK,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEX,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAmB,GAAK,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAMjB,aEOxBkB,G,MA5BO,WAGlB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAGA,OACI,gCACI,0CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,aClBjC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.039a3aca.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    //SubmitForm\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cast => [inputValue, ...cast]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mL9uPpnCLyFzRM088aWh28GzW2v9pOqw`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json ();\r\n\r\n    const gifs = data.map(item => {\r\n        return{\r\n            id: item.id,\r\n            title: item.title,\r\n            url: item.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log(gifs);\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    //const {id, title, url} = img;\r\n    \r\n    //console.log(id, title);\r\n    //console.log(url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    \r\n\r\n    const {data:images, loading} = useFetchGifs(category); //data:images es para darle un nombre, en este caso le estoy dando el nombre de images\r\n    console.log(images);\r\n    console.log(loading);\r\n\r\n\r\n    return (\r\n        <div>\r\n             <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n           {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n        \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(image => (\r\n                        <GifGridItem\r\n                            key={image.id}\r\n                            {...image}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n       getGifs(category).then(resp =>{\r\n           setState({\r\n               data: resp,\r\n               loading: false\r\n           });\r\n       })\r\n    }, [category])\r\n\r\n    return state; // es la {data:[], loading: true}\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport './index.css'\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2>Meme app</h2>\r\n            <AddCategory setCategories ={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                            />\r\n                        // return <li key={category}>{category}</li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GiftExpertApp from './GifExpertApp'\r\n\r\nReactDOM.render(\r\n    <GiftExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}